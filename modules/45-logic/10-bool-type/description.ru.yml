---

name: Логический тип
theory: |

  Кроме арифметических операций со школы нам известны операции сравнения. Например, `5 > 4`. Это звучит как вопрос: «5 больше 4?». В данном случае ответ «да». В других случаях ответом может быть «нет» (например, для `3 < 1`).

  Список операций сравнения:

  * `<` меньше
  * `<=` меньше или равно
  * `>` больше
  * `>=` больше или равно
  * `==` равно
  * `!=` не равно

  Логическая операция типа `5 > 4` — это выражение, и его результат — значение логического типа. Логический тип в Java - bool - это значение, которое записывается как `true` («истина») или `false` («ложь»), например `var isFivePositive = (5 > 0)`.

  ---

  Попробуем написать функцию, которая принимает на вход возраст ребенка в годах (целое число - тип int) и определяет, младенец ли он. Младенцами считаются дети до года:

  ```java
  static boolean isInfant(int age) {
      return age < 1;
  }
  ```

  Пользуемся тем фактом, что любая операция — это выражение, поэтому единственной строчкой функции пишем «вернуть то значение, которое получится в результате сравнения `age < 1`».

  В зависимости от пришедшего аргумента, сравнение будет либо истинным (`true`), либо ложным (`false`), а `return` вернёт этот результат.

  Вызовем функцию и выведем на экран результат.

  ```java
  public static void main(String[] args) {
    System.out.print(isInfant(3));
  }

  static boolean isInfant(int age) {
    return age < 1;
  }
  ```

  <pre class='hexlet-basics-output'>false</pre>

  А теперь проверим ребенка, которому полгода - ноль полных лет:

  ```java
  System.out.print(isInfant(0));
  ```

  <pre class='hexlet-basics-output'>true</pre>


instructions: |

  Напишите функцию `isPensioner`, которая принимает возраст в качестве единственного аргумента и проверяет, является ли этот возраст пенсионным. Пенсионным считается возвраст 60 лет и больше.

# definitions:
#   - name: "Логический тип (boolean)"
#     description: "тип данных с двумя возможными значениями: true (истина) и false (ложь)."
